<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yizhiquan.stockadmin.stockadmin.dao.ProductWarehouseStockMapper">
  <resultMap id="BaseResultMap" type="com.yizhiquan.stockadmin.stockadmin.domain.ProductWarehouseStock">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="product_spec_id" jdbcType="INTEGER" property="productSpecId" />
    <result column="product_id" jdbcType="INTEGER" property="productId" />
    <result column="warehouse_id" jdbcType="INTEGER" property="warehouseId" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="warehouse_name" jdbcType="VARCHAR" property="warehouseName"/>
    <result column="brand_name" jdbcType="VARCHAR" property="brandName"/>
  </resultMap>
  <insert id="insert" parameterType="com.yizhiquan.stockadmin.stockadmin.domain.ProductWarehouseStock">
    insert into product_warehouse_stock ( product_spec_id, product_id,
      warehouse_id, quantity, warehouse_name, brand_name )
    values (#{productSpecId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER},
      #{warehouseId,jdbcType=INTEGER}, #{quantity,jdbcType=INTEGER},
      #{warehouseName,jdbcType=VARCHAR}, #{brandName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yizhiquan.stockadmin.stockadmin.domain.ProductWarehouseStock">
    insert into product_warehouse_stock
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="productSpecId != null">
        product_spec_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="warehouseId != null">
        warehouse_id,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="productSpecId != null">
        #{productSpecId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="warehouseId != null">
        #{warehouseId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <insert id="batchInsert" parameterType="java.util.List">
    INSERT INTO product_warehouse_stock (
      product_spec_id,
      product_id,
      warehouse_id,
      quantity
    )
    VALUES
        <foreach close=")" collection="transferList" item="transfer" open="(" separator=",">
          #{specId,jdbcType=INTEGER},
          #{productId,jdbcType=INTEGER},
          #{warehouseId,jdbcType=INTEGER},
          #{quantity,jdbcType=INTEGER}
        </foreach>
  </insert>

  <update id="batchUpdate" parameterType="java.util.List">
    <foreach collection="existTransferList" item="transfer" separator=";">
      update product_warehouse_stock
      <set>

      </set>
      where id=#{transfer.stockId}
    </foreach>
  </update>

  <select id="selectBySpecAndProduct" resultMap="BaseResultMap" parameterType="com.yizhiquan.stockadmin.stockadmin.domain.ProductWarehouseStock">
      SELECT
        *
      FROM
        product_warehouse_stock
      WHERE product_spec_id = #{productSpecId}
        AND product_id = #{productId}
        AND warehouse_id = #{warehouseId}
  </select>

  <update id="updateProductStock" parameterType="com.yizhiquan.stockadmin.stockadmin.domain.ProductWarehouseStock">
    UPDATE
      product_warehouse_stock
    SET
      quantity = #{quantity}
    WHERE product_spec_id = #{productSpecId}
      AND product_id = #{productId}
      AND warehouse_id = #{warehouseId}
  </update>

  <select id="selectStockByIds" resultMap="BaseResultMap" >
    select
     * 
    from 
        product_warehouse_stock
    <where>
        id in
      <foreach collection="stockSet" item="stockId" open="(" separator="," close=")">
        #{stockId}
      </foreach>
    </where>
  </select>

  <select id="selectStockById" resultMap="BaseResultMap">
    select
     *
    from
      product_warehouse_stock
    where
      id=#{stockId}
  </select>
</mapper>